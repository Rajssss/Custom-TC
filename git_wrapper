#bin/bash
git_rebase(){
if [[ -z "$1" ]] && [[ -z "$2" ]] && [[ -z "$3" ]]
then
	printf "\nFunction requires the Branch, Remote & Remote's branch you want to Rebase on\n"
	return
else
	export L=$1
	export R=$2
	export RB=$3
	ssh-add
	find .  -maxdepth 2 -type d -name .git -execdir bash -c 'git fetch $R && git checkout $B && git rebase $R/$RB' ';'
	ssh-add -d
	printf "\nDone\n"
	unset L R RB
	return
fi
}
git_update(){
if [[ -z "$1" ]] && [[ -z "$2" ]] && [[ -z "$3" ]]
then
	printf "\nFunction requires the Branch you want to sync, the Remote & Remote branch\n"
	return
else
	export L=$1
	export R=$2
	export RB=$3
	ssh-add
	find .  -maxdepth 2 -type d -name .git -execdir bash -c 'git fetch $R && git checkout $R/$RB && git checkout -B $L' ';'
	ssh-add -d
	printf "\nDone\n"
	unset L R RB
	return
fi
}
git_push(){
if [[ -z "$1" ]] && [[ -z "$2" ]]
then
	printf "\nFunction requires the Remote & Branch\n"
	return
else
	export B=$1
	export R=$2
	ssh-add
	printf "\nChecking Out $B\n"
	find .  -maxdepth 2 -type d -name .git -execdir bash -c 'git push -fu $R $B' ';'
	ssh-add -d
	printf "\nDone\n"
	unset B R
	return
fi
}
git_checkout(){
if [[ -z "$1" ]]
then
	printf "\nFunction requires the Branch\n"
	return
else
	export B=$1
	printf "\nChecking Out $B\n"
	find .  -maxdepth 2 -type d -name .git -execdir bash -c 'git checkout $B' ';'
	printf "\nDone\n"
	unset B
	return
fi
}
git_forall(){
if [[ -z "$2" && -z "$1" ]]
then
	printf "\nNo Command Specified or Command not Enclosed in Quotes\n"
	return
elif [[ -z "$2" ]]
then
	export C=$1
	find .  -maxdepth 2 -type d -name .git -execdir bash -c '$C' ';'
	printf "\nDone\n"
	unset C
	return
else
	printf "\nNo Command Specified or Command not Enclosed in Quotes\n"
	return
fi
}
wrapper_help(){
printf "#### Command List With Syntax ####\nAll Commands affect Repos in Current Directory\n"
printf "\n>  git_rebase:"
git_rebase
printf "\n>  git_update:"
git_update
printf "\n>  git_push:"
git_push
printf "\n>  git_checkout:"
git_checkout
printf "\n>  git_forall:\n"
printf "Function requires a Command to Execute on Repositories\n"
}